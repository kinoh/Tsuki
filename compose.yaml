services:
  app:
    image: tsuki:${TAG}
    build: target/docker/stage
    command: --engine openai --history /var/memory/history.jsonl --persist
    env_file: .env
    volumes:
      - memory-data:/var/memory
    depends_on:
      - sandbox
  sandbox:
    image: langgenius/dify-sandbox:0.2.10
    environment:
      API_KEY: ${DIFY_SANDBOX_API_KEY}
      GIN_MODE: release
      WORKER_TIMEOUT: 10
      ENABLE_NETWORK: true
      HTTP_PROXY: http://ssrf-proxy:3128
      HTTPS_PROXY: http://ssrf-proxy:3128
      SANDBOX_PORT: 8194
    volumes:
      - /etc/tsuki/volumes/sandbox/dependencies:/dependencies
      - /etc/tsuki/volumes/sandbox/conf:/conf
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8194/health" ]
    networks:
      - ssrf_proxy_network
  ssrf-proxy:
    image: ubuntu/squid:6.6-24.04_beta
    volumes:
      - /etc/tsuki/ssrf_proxy/squid.conf.template:/etc/squid/squid.conf.template
      - /etc/tsuki/ssrf_proxy/docker-entrypoint.sh:/docker-entrypoint-mount.sh
    entrypoint: [ "sh", "-c", "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh" ]
    environment:
      HTTP_PORT: 3128
      COREDUMP_DIR: /var/spool/squid
      REVERSE_PROXY_PORT: 8194
      SANDBOX_HOST: sandbox
      SANDBOX_PORT: 8194
    ports:
      - "3128:3128"
      - "8194:8194"
    networks:
      - ssrf_proxy_network
      - default

volumes:
  memory-data:

networks:
  ssrf_proxy_network:
    driver: bridge
    internal: true
