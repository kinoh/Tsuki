name: GUI build

on:
  push:
  #   paths:
  #     - 'gui/**'
  # pull_request:
  #   paths:
  #     - 'gui/**'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  NDK_VERSION: 29.0.13113456

defaults:
  run:
    working-directory: ./gui

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust
      run: rustup update stable && rustup default stable
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    - name: Install dependencies
      run: pnpm install
    - name: Build
      run: pnpm tauri build --ci
    - name: Install SSH key
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        printf %s "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 700 ~/.ssh/id_rsa
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan -H $(echo ${{ secrets.SERVER_HOST }} | cut -d@ -f2) >> ~/.ssh/known_hosts 2> /dev/null
    - name: Upload
      run: |
        scp src-tauri/target/release/bundle/msi/*.msi ${{ secrets.SERVER_HOST }}:/var/tsuki/upload/${{ github.sha }}.msi

  android:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust
      run: rustup update stable && rustup default stable
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
          distribution: "temurin"
          java-version: "21"
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    - name: Install NDK
      run: sdkmanager "ndk;${{ env.NDK_VERSION }}"
    - name: Install dependencies
      run: pnpm install
    - name: Setup Android signing
      run: |
        cd src-tauri/gen/android
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
        echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
        base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
        echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties
    - name: Build
      env:
        ANDROID_HOME: /home/runner/.android/sdk
        NDK_HOME: /home/runner/.android/sdk/ndk/${{ env.NDK_VERSION }}
        FCM_APPLICATION_ID: ${{ secrets.FCM_APPLICATION_ID }}
        FCM_PROJECT_ID: ${{ secrets.FCM_PROJECT_ID }}
        FCM_API_KEY: ${{ secrets.FCM_API_KEY }}
      run: pnpm tauri android build --ci
    - name: Install SSH key
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        printf %s "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 700 ~/.ssh/id_rsa
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan -H $(echo ${{ secrets.SERVER_HOST }} | cut -d@ -f2) >> ~/.ssh/known_hosts 2> /dev/null
    - name: Upload
      run: |
        scp src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk ${{ secrets.SERVER_HOST }}:/var/tsuki/upload/${{ github.sha }}.apk
